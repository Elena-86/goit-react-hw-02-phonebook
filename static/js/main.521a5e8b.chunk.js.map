{"version":3,"sources":["components/App/App.styled.jsx","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/ContactsFilter/ContactsFilter.styled.jsx","components/ContactsFilter/ContactsFilter.jsx","components/App/App.jsx","index.js"],"names":["MainContainer","styled","div","FormContainer","form","FormLabel","label","FormInput","input","SubmitButton","button","INITIAL_STATE","name","number","ContactsForm","state","handleChangeContactsForm","target","value","setState","handleContactsFormSubmit","event","preventDefault","onAdd","props","validateContactsForm","id","nanoid","resetContactsForm","onCheckUnicity","alert","this","autoComplete","onSubmit","type","placeholder","onChange","pattern","title","required","Component","LisContainer","ul","ListItem","li","ContactsListElement","onDelete","onClick","ContactsList","contacts","length","map","contact","ContactsFilter","filter","App","handleAddContact","newContact","handleCheckContactUnicity","isExistContact","find","handleDeleteContact","handleContactsFilterChange","getVisibleContact","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.521a5e8b.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  padding: 40px;\n`;\n","import styled from '@emotion/styled';\n\nexport const FormContainer = styled.form`\n  border: solid black;\n  border-radius: 2%;\n\n  height: 150px;\n  width: 300px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  margin-bottom: 20px;\n  padding-top: 10px;\n  flex-direction: row;\n  justify-content: space-around;\n`;\n\nexport const FormInput = styled.input`\n  padding-top: 2px;\n  padding-bottom: 2px;\n  padding-left: 8px;\n  padding-right: 8px;\n  border: solid grey;\n  border-radius: 4%;\n`;\n\nexport const SubmitButton = styled.button`\n  display: block;\n  margin: auto;\n`;\n","import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport {\n  FormContainer,\n  FormLabel,\n  FormInput,\n  SubmitButton,\n} from './ContactsForm.styled';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactsForm extends Component {\n  state = INITIAL_STATE;\n\n  handleChangeContactsForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleContactsFormSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    const { onAdd } = this.props;\n\n    const isValidatedContactsForm = this.validateContactsForm();\n    if (!isValidatedContactsForm) return;\n    onAdd({ id: nanoid(), name, number });\n    this.resetContactsForm();\n  };\n\n  validateContactsForm = () => {\n    const { name, number } = this.state;\n    const { onCheckUnicity } = this.props;\n    if (!name || !number) {\n      alert('Some of required for input fields is empty!');\n      return false;\n    }\n\n    return onCheckUnicity(name);\n  };\n\n  resetContactsForm = () => this.setState(INITIAL_STATE);\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <FormContainer\n        autoComplete=\"off\"\n        onSubmit={this.handleContactsFormSubmit}\n      >\n        <FormLabel>\n          Name\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter your name\"\n            value={name}\n            onChange={this.handleChangeContactsForm}\n          />\n        </FormLabel>\n        <FormLabel>\n          Number\n          <FormInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter your phone number\"\n            value={number}\n            onChange={this.handleChangeContactsForm}\n          />\n        </FormLabel>\n        <SubmitButton type=\"submit\">Add Contact</SubmitButton>\n      </FormContainer>\n    );\n  }\n}\n\nContactsForm.propTypes = {\n  handleContactsFormSubmit: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactsForm;\n","import styled from '@emotion/styled';\n\nexport const LisContainer = styled.ul`\n  list-style: none;\n  width: 260px;\n`;\n\nexport const ListItem = styled.li`\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n`;\n","import PropTypes from 'prop-types';\nimport { LisContainer, ListItem } from './ContactsList.styled';\nconst ContactsListElement = ({ id, name, number, onDelete }) => {\n  return (\n    <ListItem>\n      {name}: {number} <button onClick={() => onDelete(id)}>Delete</button>\n    </ListItem>\n  );\n};\n\nconst ContactsList = ({ contacts, onDelete }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <LisContainer>\n      {contacts.map(contact => (\n        <ContactsListElement\n          key={contact.id}\n          {...contact}\n          onDelete={onDelete}\n        />\n      ))}\n    </LisContainer>\n  );\n};\n\nContactsListElement.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default ContactsList;\n","import styled from '@emotion/styled';\n\nexport const FormLabel = styled.form`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  width: 300px;\n  margin-bottom: 20px;\n  padding-top: 10px;\n  justify-content: center;\n`;\n","import PropTypes from 'prop-types';\nimport { FormLabel } from './ContactsFilter.styled';\nconst ContactsFilter = ({ filter, onChange }) => (\n  <FormLabel>\n    Find contacts by name\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => onChange(target.value)}\n      placeholder=\"Enter name for Search\"\n    />\n  </FormLabel>\n);\n\nContactsFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ContactsFilter;\n","import { Component } from 'react';\n\nimport { MainContainer } from './App.styled';\nimport ContactsForm from '../ContactsForm';\nimport ContactsList from '../ContactsList';\nimport ContactsFilter from '../ContactsFilter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleAddContact = newContact =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n  handleCheckContactUnicity = name => {\n    const { contacts } = this.state;\n\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert(`${name} is already in contacts!`);\n    return !isExistContact;\n  };\n\n  handleDeleteContact = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n\n  handleContactsFilterChange = filter => this.setState({ filter });\n\n  getVisibleContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContact();\n\n    return (\n      <MainContainer>\n        <h2>Phonebook</h2>\n        <ContactsForm\n          onAdd={this.handleAddContact}\n          onCheckUnicity={this.handleCheckContactUnicity}\n        />\n        <h3>Contacts</h3>\n        <ContactsFilter\n          filter={filter}\n          onChange={this.handleContactsFilterChange}\n        />\n        <ContactsList\n          contacts={visibleContacts}\n          onDelete={this.handleDeleteContact}\n        />\n      </MainContainer>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components//App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}