{"version":3,"sources":["components/App/App.styled.jsx","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/ContactsFilter/ContactsFilter.styled.jsx","components/ContactsFilter/ContactsFilter.jsx","components/App/App.jsx","index.js"],"names":["MainContainer","styled","div","FormContainer","form","FormLabel","FormInput","input","SubmitButton","button","INITIAL_STATE","name","phone","ContactsForm","state","handleChangeContactsForm","target","value","setState","handleContactsFormSubmit","event","preventDefault","onAdd","props","validateContactsForm","id","uuid","resetContactsForm","onCheckUnicity","alert","this","onSubmit","type","placeholder","onChange","Component","LisContainer","ul","ListItem","li","ContactsListElement","onDelete","onClick","ContactsList","contacts","length","map","contact","ContactsFilter","filter","App","number","handleAddContact","newContact","handleCheckContactUnicity","isExistContact","find","handleDeleteContact","handleContactsFilterChange","getVisibleContact","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba65c909.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const MainContainer = styled.div`\r\n  padding: 40px;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const FormContainer = styled.form`\r\n  border: solid black;\r\n  border-radius: 2%;\r\n\r\n  height: 150px;\r\n  width: 300px;\r\n`;\r\n\r\nexport const FormLabel = styled.form`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  padding-top: 10px;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  padding-top: 2px;\r\n  padding-bottom: 2px;\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  border: solid grey;\r\n  border-radius: 4%;\r\n`;\r\n\r\nexport const SubmitButton = styled.button`\r\n  display: block;\r\n  margin: auto;\r\n`;\r\n","import { Component } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport {\r\n  FormContainer,\r\n  FormLabel,\r\n  FormInput,\r\n  SubmitButton,\r\n} from './ContactsForm.styled';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  phone: '',\r\n};\r\n\r\nclass ContactsForm extends Component {\r\n  state = INITIAL_STATE;\r\n\r\n  handleChangeContactsForm = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleContactsFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const { name, phone } = this.state;\r\n    const { onAdd } = this.props;\r\n\r\n    const isValidatedContactsForm = this.validateContactsForm();\r\n    if (!isValidatedContactsForm) return;\r\n    onAdd({ id: uuid(), name, phone });\r\n    this.resetContactsForm();\r\n  };\r\n\r\n  validateContactsForm = () => {\r\n    const { name, phone } = this.state;\r\n    const { onCheckUnicity } = this.props;\r\n    if (!name || !phone) {\r\n      alert('Some of required for input fields is empty!');\r\n      return false;\r\n    }\r\n\r\n    return onCheckUnicity(name);\r\n  };\r\n\r\n  resetContactsForm = () => this.setState(INITIAL_STATE);\r\n\r\n  render() {\r\n    const { name, phone } = this.state;\r\n    return (\r\n      <FormContainer onSubmit={this.handleContactsFormSubmit}>\r\n        <FormLabel>\r\n          Name\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter your name\"\r\n            value={name}\r\n            onChange={this.handleChangeContactsForm}\r\n          />\r\n        </FormLabel>\r\n        <FormLabel>\r\n          Number\r\n          <FormInput\r\n            type=\"tel\"\r\n            name=\"phone\"\r\n            placeholder=\"Enter your phone number\"\r\n            value={phone}\r\n            onChange={this.handleChangeContactsForm}\r\n          />\r\n        </FormLabel>\r\n        <SubmitButton type=\"submit\">Add Contact</SubmitButton>\r\n      </FormContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsForm;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const LisContainer = styled.ul`\r\n  list-style: none;\r\n  width: 260px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n","import { LisContainer, ListItem } from './ContactsList.styled';\r\nconst ContactsListElement = ({ id, name, phone, onDelete }) => {\r\n  return (\r\n    <ListItem>\r\n      {name}: {phone} <button onClick={() => onDelete(id)}>Delete</button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nconst ContactsList = ({ contacts, onDelete }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <LisContainer>\r\n      {contacts.map(contact => (\r\n        <ContactsListElement {...contact} onDelete={onDelete} />\r\n      ))}\r\n    </LisContainer>\r\n  );\r\n};\r\nexport default ContactsList;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const FormLabel = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 300px;\r\n  margin-bottom: 20px;\r\n  padding-top: 10px;\r\n  justify-content: center;\r\n`;\r\n","import { FormLabel } from './ContactsFilter.styled';\r\nconst ContactsFilter = ({ filter, onChange }) => (\r\n  <FormLabel>\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={({ target }) => onChange(target.value)}\r\n      placeholder=\"Enter name for Search\"\r\n    />\r\n  </FormLabel>\r\n);\r\n\r\nexport default ContactsFilter;\r\n","import { Component } from 'react';\r\n\r\nimport { MainContainer } from './App.styled';\r\nimport ContactsForm from '../ContactsForm';\r\nimport ContactsList from '../ContactsList';\r\nimport ContactsFilter from '../ContactsFilter';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  handleAddContact = newContact =>\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [...contacts, newContact],\r\n    }));\r\n\r\n  handleCheckContactUnicity = name => {\r\n    const { contacts } = this.state;\r\n\r\n    const isExistContact = !!contacts.find(contact => contact.name === name);\r\n    isExistContact && alert(`${name} is already in contacts!`);\r\n    return !isExistContact;\r\n  };\r\n\r\n  handleDeleteContact = id =>\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== id),\r\n    }));\r\n\r\n  handleContactsFilterChange = filter => this.setState({ filter });\r\n\r\n  getVisibleContact = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContact();\r\n\r\n    return (\r\n      <MainContainer>\r\n        <h2>Phonebook</h2>\r\n        <ContactsForm\r\n          onAdd={this.handleAddContact}\r\n          onCheckUnicity={this.handleCheckContactUnicity}\r\n        />\r\n        <h3>Contacts</h3>\r\n        <ContactsFilter\r\n          filter={filter}\r\n          onChange={this.handleContactsFilterChange}\r\n        />\r\n        <ContactsList\r\n          contacts={visibleContacts}\r\n          onDelete={this.handleDeleteContact}\r\n        />\r\n      </MainContainer>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components//App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}